image: golang:alpine

stages:
  - build
  - containerize

build:
  stage: build
  before_script:
    - apk add --no-cache make git
    - mkdir -p $GOPATH/src/gitlab.com/$CI_PROJECT_NAMESPACE
    - cd $GOPATH/src/gitlab.com/$CI_PROJECT_NAMESPACE
    - ln -s $CI_PROJECT_DIR
    - cd $CI_PROJECT_NAME
    - 'sed -ie "s/appVersion = \"[0-9]\{1,10\}\.[0-9]\{1,10\}\.[0-9]\{1,10\}\"/appVersion = \"${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CI_JOB_ID}\"/g" cmd/cmd.go'
  script:
    - make build
  artifacts:
    name: app
    paths:
      - bin/

container:
  stage: containerize
  image: docker:latest
  services:
    - docker:dind
  dependencies:
    - build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -f ./Dockerfile -t $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME .
    - 'if [ -n "$CI_COMMIT_TAG" ]; then
        docker tag "$CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME" "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG";
        docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG";
      elif [ "$CI_BUILD_REF_NAME" = "master" ]; then
        docker tag "$CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME" "$CI_REGISTRY_IMAGE:latest";
        docker push "$CI_REGISTRY_IMAGE:latest";
      else
        docker push $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME;
      fi'
